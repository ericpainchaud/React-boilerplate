/*
 *
 * {{ properCase name }}
 *
 */

import React, { Component, PropTypes } from 'react';
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
{{#if wantF1}}
import ReactF1 from 'react-f1';

import { states, IDLE } from './{{ properCase name }}F1States';
import transitions from './{{ properCase name }}F1Transitions';
{{/if}}
{{#if wantCSS}}
import styles from './{{ properCase name }}.css';
{{/if}}

@connect(
  state => ({
    /* prop: state.reducerName.reducerStateKey, */
  }),
  dispatch => ({
    /* actionCreator: bindActionCreators(importedActionCreator, dispatch), */
  })
)
export default class {{ properCase name }} extends Component {

  static get propTypes() {
    return {

    };
  }

  constructor(props, context) {
    super(props, context);
    this.state = {
      {{#if wantF1}}
      go: IDLE,
      {{/if}}
    };
    {{#if wantF1}}

    this.completeF1Handler = this.completeF1Handler.bind(this);
    {{/if}}
  }

  {{#if wantF1}}
  completeF1Handler() {
    switch (this.state.go) {

      case IDLE:
        break;

      default:
        break;
    }
  }

  {{/if}}
  render() {
    return (
      {{#if wantF1}}
      <ReactF1
        {{#if wantCSS}}
        className={ styles.{{ camelCase name }} }
        {{/if}}
        go={this.state.go}
        states={states()}
        transitions={transitions()}
        onComplete={this.completeF1Handler}
      >
        <div data-f1="container">
          <h1>{{ titleCase name }}</h1>
        </div>
      </ReactF1>
      {{else}}
      <div
        {{#if wantCSS}}
        className={ styles.{{ camelCase name }} }
        {{/if}}
      >
        <h1>{{ titleCase name }}</h1>
      </div>
      {{/if}}
    );
  }
}
